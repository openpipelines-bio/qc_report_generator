name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dataset:
          - name: single-cell
            type: sc
            path: resources_test/sc_dataset
            output: single-cell-report.html
          - name: single-cell-large
            type: sc_large
            path: resources_test/sc_dataset_large
            output: single-cell-large-report.html
          - name: spatial
            type: xenium
            path: resources_test/xenium_dataset
            output: spatial-report.html
          - name: spatial-large
            type: xenium_large
            path: resources_test/xenium_dataset_large
            output: spatial-large-report.html
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install jsonlite
        run: Rscript -e "install.packages('jsonlite')"

      - name: Install dependencies
        run: pnpm install

      - name: Prepare output directory
        run: mkdir output

      - name: Build ${{ matrix.dataset.name }} report
        run: |
          pnpm run generate_data ${{ matrix.dataset.type }} ${{ matrix.dataset.path }}
          pnpm run compress_data ${{ matrix.dataset.path }}/structure.json src/data/report_structure.ts
          pnpm run compress_data ${{ matrix.dataset.path }}/data.json src/data/dataset.ts
          pnpm run build
          mv dist/index.html output/${{ matrix.dataset.output }}

      - name: Upload ${{ matrix.dataset.name }} report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dataset.name }}-report
          path: output/${{ matrix.dataset.output }}
